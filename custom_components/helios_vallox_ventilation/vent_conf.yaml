  # All min/max/default values are taken from the Helios EC300 Pro manual.
  # Vallox values may differ!
  # (especially for heating - as per my knowldge, Helios is using pre-heating,
  # Vallox is using post-heating)

  # Please note that the set of registers and values is fixed by the device.
  # Therefore, there should be no need to add or remove entities in this file.
  # All entities are automatically prefixed with 'ventilation_'.

  ip_address: !secret helios_vallox_ip
  port: !secret helios_vallox_port

  sensors:

    # DE Lüftungsstufe
    - name: fanspeed
      description: "Fan speed"
      min_value: 1
      max_value: 8
      icon: "mdi:speedometer-medium"

    # DE Einschaltstufe
    - name: "initial_fanspeed"
      description: "Initial fan speed after switching on"
      unit_of_measurement: "level"
      min_value: 1
      max_value: 8
      default_value: 1
      icon: "mdi:speedometer-slow"

    # DE Maximalstufe
    - name: "max_fanspeed"
      description: "Maximum fan speed availabe to remotes"
      unit_of_measurement: "level"
      min_value: 1
      max_value: 8
      default_value: 8
      icon: "mdi:speedometer"

    # DE: Außenlufttemperatur 
    - name: "temperature_outdoor_air"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"   # ="read-only"
      icon: "mdi:thermometer"

    # DE: Zulufttemperatur
    - name: "temperature_supply_air"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    # DE: Ablufttemperatur
    - name: "temperature_extract_air"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    # DE: Fortlufttemperatur
    - name: "temperature_exhaust_air"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    - name: "bypass_setpoint"
      unit_of_measurement: "°C"
      min_value: 0
      max_value: 25
      default_value: 10
      icon: "mdi:thermometer"

    # set to +5 to activate with pre-heating with defrost defaults below
    - name: "preheat_setpoint"
      unit_of_measurement: "°C"
      min_value: -10
      max_value: 10
      default_value: -3
      icon: "mdi:thermometer"

    # can be reduced below 0 in case of enthalpy exchanger
    - name: "defrost_setpoint"
      unit_of_measurement: "°C"
      min_value: -6
      max_value: 15
      default_value: 3
      icon: "mdi:thermometer"

    - name: "defrost_hysteresis"
      unit_of_measurement: "°C"
      min_value: 1
      max_value: 10
      default_value: 3
      icon: "mdi:thermometer"

    - name: "boost_remaining"
      device_class: "duration"
      state_class: "measurement"
      unit_of_measurement: "minutes"
      icon: "mdi:fan-clock"
    
    - name: "input_fan_percent"
      unit_of_measurement: "%"
      min_value: 65
      max_value: 100
      default_value: 100
      icon: "mdi:percent"

    - name: "output_fan_percent"
      unit_of_measurement: "%"
      min_value: 65
      max_value: 100
      default_value: 100
      icon: "mdi:percent"

    - name: "service_interval"
      unit_of_measurement: "months"
      min_value: 1
      max_value: 12
      default_value: 4
      icon: "mdi:calendar-multiple"

    - name: "service_due_months"
      unit_of_measurement: "months"
      min_value: 0
      icon: "mdi:calendar-end"

    - name: "fault_number"
      state_class: "measurement"
      unit_of_measurement: ""
      icon: "mdi:alert"

    # no reading - set by vent_functions.py, see also const.py
    - name: "fault_text"
      icon: "mdi:alert"

    # no reading - calculated by vent_functions.py
    - name: "temperature_reduction"
      description: "Heat recovery - reduction of outgoing air temperature"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    # no reading - calculated by vent_functions.py
    - name: "temperature_gain"
      description: "Heat recovery - gain of incoming air temperature"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    # no reading - calculated by vent_functions.py
    - name: "temperature_balance"
      description: "Difference temperature reduction ./. temperature gain"
      unit_of_measurement: "°C"
      device_class: "temperature"
      state_class: "measurement"
      icon: "mdi:thermometer"

    # no reading - calculated by vent_functions.py
    - name: "efficiency"
      unit_of_measurement: "%"
      state_class: "measurement"
      icon: "mdi:percent"

  binary_sensors:

    - name: "boost_status"
      icon: "mdi:tooltip-question"

    - name: "fault_detected"
      device_class: "problem"
      icon: "mdi:alert"

    - name: "clean_filter"
      device_class: "problem"
      icon: "mdi:alert"

    - name: "service_requested"
      device_class: "problem"
      icon: "mdi:alert"

    - name: "post_heating_on"
      device_class: "heat"
      icon: "mdi:heating-coil"

  switches:

    # ???? --> throws errors on writing
    - name: "powerstate"
      device_class: "power"
      icon: "mdi:power-settings"

    - name: "co2_indicator"
      device_class: "problem"
      icon: "mdi:alert"

    - name: "rh_indicator"
      device_class: "problem"
      icon: "mdi:alert"

    - name: "winter_mode"
      device_class: "switch"
      icon: "mdi:alert"

    - name: "preheat_status"
      device_class: "switch"
      icon: "mdi:tooltip-question"

    # 0=Fireplace mode, 1=Normal boost
    - name: "boost_mode"
      device_class: "switch"
      icon: "mdi:fan-speed-2"

    - name: "activate_boost"
      device_class: "switch"
      icon: "mdi:fan"

    - name: "input_fan_off"
      device_class: "power"
      icon: "mdi:fan-off"

    - name: "output_fan_off"
      device_class: "power"
      icon: "mdi:fan-off"
